### 解题思路

直接用升序排序好的新数组与原数组进行对比，找出两者间首尾不同的一段子数组，这个子数组的长度就是题目所要求的最短子数组的长度。

### 查找方法：

1.先从左往右同时遍历两个数组，原数组与新数组第一个不相等的位置就是所求子数组的起点 *i* 。
2.然后，再从右往左遍历对比两个数组直至 *i+1*，找到原数组与新数组第一个不相等的位置就是所求子数组的终点 *j* 。
3.如果能够找到 *i* 和 *j*，那么最短子数组的长度就是 *j-i+1* ；如果找不出这样的不同，那么最短子数组就是*0*，也就是说原数组本身就是升序排序的，不需要找子数组进行升序排序处理。

### 代码

* python3

```python
class Solution:
    def findUnsortedSubarray(self, nums: List[int]) -> int:
        n = len(nums)
        new = sorted(nums)
        for i in range(n):
            if new[i] != nums[i]:
                j = n-1
                while j > i and new[j] == nums[j]:
                    j-=1
                return j-i+1
        return 0
```

### 提交结果

![1680083302820.jpg](https://pic.leetcode.cn/1680083308-FIPgmL-1680083302820.jpg)
