package 培训期间excercise.Array;


/**
 * 题目：给定一个二维字符串数组 board，它表示一个迷宫地图，其中 "." 表示空地， "#" 表示障碍物。假设起点为左上角（0, 0），
 * 终点为右下角（m-1, n-1），请你找出一条从起点到终点的最短路径，路径上只能经过空地，不能经过障碍物。
 * 示例：
 * board = [
 *   [".",".",".",".","#"],
 *   ["#",".","#",".","."],
 *   [".",".",".",".","."],
 *   [".","#","#",".","."],
 *   [".",".",".",".","."]
 * ]
 * 输出：8
 * 解释：从起点 (0, 0) 到终点 (4, 4) 可以沿着下面的路径走："0,0" -> "1,0" -> "1,1" -> "1,2" -> "2,2" -> "3,2" -> "3,3" -> "4,3" -> "4,4"，
 * 路径长度为8。
 * 要求：请编写一个Java函数，接收一个字符串数组表示地图，返回从起点到终点的最短路径的长度。如果不存在从起点到终点的路径，则返回 -1。
 */
public class ArrayExc {

  /**
   * 最短路径solution
   * @param board 地图
   * @return 最短路径长度
   */
  public int shortestPath(String[][] board) {
    //
    return 0;
  }

  public static void main(String[] args) {
    return;
  }
}
